@model IEnumerable<DoAnCNPM.Models.Order>
@{
    ViewData["Title"] = "Quản lý Đơn hàng";
    Layout = "_DashboardLayout";
}
<link rel="stylesheet" href="/css/quanli.css" />
<script src="/js/quanli.js"></script>
<h2>Danh sách Đơn hàng</h2>

<!-- Form tìm kiếm -->
<form method="get" action="@Url.Action("DSDonHang")" class="search-form">
    <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Tìm kiếm theo đơn hàng..." class="search-input" />
    <select name="orderStatus" class="filter-select">
        <option value="">Tất cả trạng thái</option>
        <option value="Pending" @(ViewBag.OrderStatus == "Pending" ? "selected" : "")>Pending</option>
        <option value="Đang giao" @(ViewBag.OrderStatus == "Đang giao" ? "selected" : "")>Đang giao</option>
        <option value="Đã giao" @(ViewBag.OrderStatus == "Đã giao" ? "selected" : "")>Đã giao</option>
        <option value="Đã hủy" @(ViewBag.OrderStatus == "Đã hủy" ? "selected" : "")>Đã hủy</option>
    </select>
    <select name="paymentStatus" class="filter-select">
        <option value="">Tất cả thanh toán</option>
        <option value="Đã thanh toán" @(ViewBag.PaymentStatus == "Đã thanh toán" ? "selected" : "")>Đã thanh toán</option>
        <option value="Chưa thanh toán" @(ViewBag.PaymentStatus == "Chưa thanh toán" ? "selected" : "")>Chưa thanh toán</option>
    </select>
    <button type="submit" class="btn-search">Tìm kiếm</button>
    <button type="button" class="btn-reset" id="resetSearch">Đặt lại</button>
</form>


<!-- Nút thêm và xóa nhiều -->
<div class="search-actions">
    <a href="@Url.Action("Create")" class="btn btn-add">Thêm Đơn hàng mới</a>
    <button type="button" class="btn btn-danger btn-delete-selected" id="deleteSelected" style="display: none;">
        <i class="fas fa-trash-alt"></i> Xóa đã chọn
    </button>
</div>
<div class="table-container">
    <table class="table-products">
        <thead>
            <tr>
                <th><input type="checkbox" id="selectAll" /></th>
                <th>ID</th>
                <th>Tên người đặt</th>
                <th>Địa chỉ</th>
                <th>Số điện thoại</th>
                <th>Phương thức thanh toán</th>
                <th>Tình trạng thanh toán</th>
                <th>Ngày đặt</th>
                <th>Ngày giao</th>
                <th>Trạng thái</th>
                <th>Tổng tiền</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                string statusClass = order.Status switch
                {
                    "Pending" => "status-pending",
                    "Đã hủy" => "status-canceled",
                    "Đang giao" => "status-in-transit",
                    "Đã giao" => "status-delivered",
                    _ => ""
                };

                <tr>
                    <td><input type="checkbox" class="order-checkbox" value="@order.Order_ID" /></td>
                    <td>@order.Order_ID</td>
                    <td>@order.CustomerName</td>
                    <td>@order.ShippingAddress</td>
                    <td>@order.CustomerPhone</td>
                    <td>@order.PaymentMethod</td>
                    <td>@order.PaymentStatus</td>
                    <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                    <td>@(order.DeliveryDate?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td class="@statusClass">@order.Status</td>
                    <td>@order.TotalAmount.ToString("N0") đ</td>
                    <td class="actions">
                        <a href="@Url.Action("Details", new { id = order.Order_ID })" class="btn btn-view">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a href="@Url.Action("Edit", new { id = order.Order_ID })" class="btn btn-edit">
                            <i class="fas fa-edit"></i>
                        </a>
                        <button type="button" class="btn btn-delete delete-item" data-id="@order.Order_ID" data-url="@Url.Action("Delete", "OrderManagement")">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                <a class="page-link" href="?page=@i">@i</a>
            </li>
        }
    </ul>
</nav>
    <style >
</style>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
<script>
        document.getElementById("resetSearch").addEventListener("click", function () {
            document.querySelector('input[name="searchTerm"]').value = '';
            document.querySelector('select[name="orderStatus"]').value = '';
            document.querySelector('select[name="paymentStatus"]').value = '';
            document.querySelector(".search-form").submit();
        });

    document.addEventListener("DOMContentLoaded", function () {
        const selectAllCheckbox = document.getElementById("selectAll");
        const orderCheckboxes = document.querySelectorAll(".order-checkbox");
        const deleteSelectedButton = document.getElementById("deleteSelected");

        function toggleDeleteButton() {
            const anyChecked = Array.from(orderCheckboxes).some(checkbox => checkbox.checked);
            deleteSelectedButton.style.display = anyChecked ? "inline-block" : "none";
        }

        orderCheckboxes.forEach(checkbox => {
            checkbox.addEventListener("change", toggleDeleteButton);
        });

        selectAllCheckbox.addEventListener("change", function () {
            orderCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            toggleDeleteButton();
        });

        deleteSelectedButton.addEventListener("click", function () {
            const selectedIds = Array.from(orderCheckboxes)
                .filter(checkbox => checkbox.checked)
                .map(checkbox => parseInt(checkbox.value));

            if (selectedIds.length > 0) {
                Swal.fire({
                    title: 'Bạn có chắc chắn muốn xóa các đơn hàng đã chọn?',
                    text: "Hành động này không thể hoàn tác!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Xóa',
                    cancelButtonText: 'Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('@Url.Action("DeleteMultiple", "OrderManagement")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': '@ViewBag.AntiForgeryToken'
                            },
                            body: JSON.stringify(selectedIds)
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire('Đã xóa!', data.message, 'success')
                                        .then(() => location.reload());
                                } else {
                                    Swal.fire('Lỗi!', data.message, 'error');
                                }
                            })
                            .catch(error => {
                                Swal.fire('Lỗi!', 'Không thể xóa đơn hàng, vui lòng thử lại.', 'error');
                            });
                    }
                });
            } else {
                Swal.fire('Chú ý!', 'Vui lòng chọn ít nhất một đơn hàng để xóa.', 'info');
            }
        });

        document.getElementById("resetSearch").addEventListener("click", function () {
            document.querySelector('input[name="searchTerm"]').value = '';
            document.querySelector('select[name="orderStatus"]').value = '';
            document.querySelector('select[name="paymentStatus"]').value = '';
            document.querySelector(".search-form").submit();
        });
    });
</script>


